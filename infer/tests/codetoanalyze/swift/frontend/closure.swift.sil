// 
// Copyright (c) Facebook, Inc. and its affiliates.
//
// This source code is licensed under the MIT license found in the
// LICENSE file in the root directory of this source tree.

.source_language = "Swift" @?

define .plain_name = "setupClosureOk" .method_offset = "19" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleC14setupClosureOkyyF(var1: *ptr_elt) : *ptr_elt {
  local self: *ptr_elt, getelementptr_offset_1: *void
  #: @[136:0]
      n1 = load &var1 @[136:0]
      store &self <- n1 @[136:0]
      n2 = load &metadata @[138:0]
      n3 = load n2.swift::full_boxmetadata.field_2 @[138:0]
      n6 = __sil_swift_alloc(<T5Hello18RetainCycleExampleC>) @[138:0]
      jmp 3::ret @[139:0]
      
  #10::ret: @[13:16]
      n12 = load &var1 @[13:16]
      store &getelementptr_offset_1 <- 16 @[13:16]
      n13 = load &getelementptr_offset_1 @[13:16]
      n18 = load &var1 @[13:16]
      _ = $builtins.llvm_dynamic_call(n13, __sil_cast(<int>, "$s5Hello18RetainCycleExampleC14setupClosureOkyyFyycfU_TA"), __sil_cast(<int>, n6), n18) @[13:16]
      jmp 14::void::ret @[13:16]
      
  #14::void::ret: @[16:5]
      ret null @[16:5]
      
  #3::ret: @[13:26]
      n7 = load &var1 @[13:26]
      n8 = n7 @[13:26]
      jmp 5::ret @[13:26]
      
  #5::ret: @[140:0]
      n9 = $builtins.llvm_nondet() @[140:0]
      n11 = n6 @[143:0]
      jmp 10::ret @[144:0]
      
} @?

define $s5Hello18RetainCycleExampleC14setupClosureOkyyFyycfU_(var1: *ptr_elt) : *ptr_elt {
  local var5: *T5Hello18RetainCycleExampleCSg, var4: int[], self: *ptr_elt, getelementptr_offset_1: *void
  #: @[13:26]
      n2 = load &var1 @[13:26]
      n1 = n2.__infer_tuple_class<*swift::refcounted,*swift::weak>.__infer_tuple_field_1 @[13:26]
      store &self <- n1 @[146:0]
      n3 = load n1 @[14:17]
      n4 = n3 @[14:17]
      jmp 6::ret @[14:17]
      
  #11: @[148:0]
      n7 = load &var5 @[148:0]
      n8 = $s5Hello18RetainCycleExampleCSgWOh(n7) @[148:0]
      jmp 12::ret @[149:0]
      
  #11::jmp::20: @[152:0]
      n9 = 1 @[152:0]
      jmp 20 @[153:0]
      
  #12::ret: @[151:0]
      jmp 11::jmp::20 @[151:0]
      
  #13: @[14:17]
      n11 = load &var5 @[14:17]
      n13 = n11 @[14:17]
      jmp 15::ret @[14:17]
      
  #13::jmp::20: @[160:0]
      n9 = 0 @[160:0]
      jmp 20 @[161:0]
      
  #15::ret: @[155:0]
      n14 = load &var5 @[155:0]
      n15 = $s5Hello18RetainCycleExampleCSgWOh(n14) @[155:0]
      jmp 16::ret @[156:0]
      
  #16::ret: @[14:22]
      n16 = load n11 @[14:22]
      store &getelementptr_offset_1 <- 13 @[14:22]
      n17 = load &getelementptr_offset_1 @[14:22]
      _ = $builtins.llvm_dynamic_call(n17, 20, n11) @[14:22]
      jmp 19::void::ret @[14:22]
      
  #19::void::ret: @[159:0]
      jmp 13::jmp::20 @[159:0]
      
  #20: @[15:9]
      ret null @[15:9]
      
  #6::ret: @[14:17]
      store &var5 <- __sil_cast(<int>, n4) @[14:17]
      n6 = load &var5 @[14:17]
      if __sil_bxor(__sil_eq(n6, 0), 1) then jmp 13 else jmp 11 @[14:17]
      
} @?

declare $s5Hello18RetainCycleExampleC14setupClosureOkyyFyycfU_TA(*ptr_elt) : *ptr_elt

define .plain_name = "setupClosureBug" .method_offset = "18" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleC15setupClosureBugyyF(var1: *ptr_elt) : *ptr_elt {
  local self: *ptr_elt, getelementptr_offset_1: *void
  #: @[165:0]
      n1 = load &var1 @[165:0]
      store &self <- n1 @[165:0]
      n2 = load &var1 @[167:0]
      n3 = n2 @[167:0]
      jmp 3::ret @[168:0]
      
  #3::ret: @[7:17]
      n4 = load &var1 @[7:17]
      store &getelementptr_offset_1 <- 16 @[7:17]
      n5 = load &getelementptr_offset_1 @[7:17]
      n8 = load &var1 @[7:17]
      n10 = load &var1 @[7:17]
      _ = $builtins.llvm_dynamic_call(n5, __sil_cast(<int>, "$s5Hello18RetainCycleExampleC15setupClosureBugyyFyycfU_TA"), __sil_cast(<int>, n8), n10) @[7:17]
      jmp 7::void::ret @[7:17]
      
  #7::void::ret: @[10:5]
      ret null @[10:5]
      
} @?

define $s5Hello18RetainCycleExampleC15setupClosureBugyyFyycfU_(var1: *ptr_elt) : *ptr_elt {
  local self: *ptr_elt, getelementptr_offset_1: *void
  #: @[170:0]
      n1 = load &var1 @[170:0]
      store &self <- n1 @[170:0]
      n2 = load &var1 @[8:21]
      store &getelementptr_offset_1 <- 13 @[8:21]
      n3 = load &getelementptr_offset_1 @[8:21]
      n5 = load &var1 @[8:21]
      _ = $builtins.llvm_dynamic_call(n3, 20, n5) @[8:21]
      jmp 5::void::ret @[8:21]
      
  #5::void::ret: @[9:9]
      ret null @[9:9]
      
} @?

declare $s5Hello18RetainCycleExampleC15setupClosureBugyyFyycfU_TA(*ptr_elt) : *ptr_elt

declare .plain_name = "id.modify" .method_offset = "14" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleC2idSivM(*ptr_elt, *ptr_elt) : *ptr_elt

declare .plain_name = "id.modify" $s5Hello18RetainCycleExampleC2idSivM::resume::0(*ptr_elt, int) : *ptr_elt

define .plain_name = "id.get" .method_offset = "12" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleC2idSivg(var1: *ptr_elt) : int {
  local var3: int[]
  #: @[179:0]
      n2 = load &var1 @[179:0]
      n1 = n2.T5Hello18RetainCycleExampleC.field_1 @[179:0]
      n4 = load n1 @[181:0]
      n3 = load n4.TSi.field_0 @[181:0]
      ret n3 @[183:0]
      
} @?

declare $s5Hello18RetainCycleExampleC2idSivpfi() : *ptr_elt

define .plain_name = "id.set" .method_offset = "13" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleC2idSivs(var1: int, var2: *ptr_elt) : *ptr_elt {
  local var4: int[]
  #: @[188:0]
      n2 = load &var2 @[188:0]
      n1 = n2.T5Hello18RetainCycleExampleC.field_1 @[188:0]
      n4 = load n1 @[190:0]
      n3 = load &var1 @[190:0]
      store n4.TSi.field_0 <- n3 @[190:0]
      ret null @[192:0]
      
} @?

declare .plain_name = "closure.modify" .method_offset = "17" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleC7closureyycSgvM(*ptr_elt, *ptr_elt) : *ptr_elt

declare .plain_name = "closure.modify" $s5Hello18RetainCycleExampleC7closureyycSgvM::resume::0(*ptr_elt, int) : *ptr_elt

define .plain_name = "closure.get" .method_offset = "15" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleC7closureyycSgvg(var1: *ptr_elt) : *__infer_tuple_class<int,int> {
  local var3: int[]
  #: @[199:0]
      n2 = load &var1 @[199:0]
      n1 = n2.T5Hello18RetainCycleExampleC.field_2 @[199:0]
      n4 = load n1 @[201:0]
      n3 = load n4.__infer_tuple_class<int,int>.__infer_tuple_field_0 @[201:0]
      n6 = load n1 @[202:0]
      n5 = load n6.__infer_tuple_class<int,int>.__infer_tuple_field_1 @[202:0]
      _ = $sIeg_SgWOy(n3, n5) @[204:0]
      jmp $sIeg_SgWOy::void::ret @[205:0]
      
  #$sIeg_SgWOy::void::ret: @[207:0]
      n9 = $builtins.llvm_init_tuple() @[207:0]
      store n9.__infer_tuple_class<int,int>.__infer_tuple_field_0 <- n3 @[208:0]
      store n9.__infer_tuple_class<int,int>.__infer_tuple_field_1 <- n5 @[208:0]
      ret n9 @[208:0]
      
} @?

declare $s5Hello18RetainCycleExampleC7closureyycSgvpfi() : *ptr_elt

define .plain_name = "closure.set" .method_offset = "16" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleC7closureyycSgvs(var1: int, var2: int, var3: *ptr_elt) : *ptr_elt {
  local var5: int[]
  #: @[214:0]
      n1 = load &var1 @[214:0]
      n2 = load &var2 @[214:0]
      _ = $sIeg_SgWOy(n1, n2) @[214:0]
      jmp $sIeg_SgWOy::void::ret @[215:0]
      
  #$sIeg_SgWOe::void::1::ret: @[229:0]
      ret null @[229:0]
      
  #$sIeg_SgWOe::void::ret: @[227:0]
      n15 = load &var1 @[227:0]
      n16 = load &var2 @[227:0]
      _ = $sIeg_SgWOe(n15, n16) @[227:0]
      jmp $sIeg_SgWOe::void::1::ret @[228:0]
      
  #$sIeg_SgWOy::void::ret: @[216:0]
      n4 = load &var3 @[216:0]
      n3 = n4.T5Hello18RetainCycleExampleC.field_2 @[216:0]
      n6 = load n3 @[218:0]
      n5 = load n6.__infer_tuple_class<int,int>.__infer_tuple_field_0 @[218:0]
      n8 = load n3 @[219:0]
      n7 = load n8.__infer_tuple_class<int,int>.__infer_tuple_field_1 @[219:0]
      n10 = load n3 @[220:0]
      n9 = load &var1 @[220:0]
      store n10.__infer_tuple_class<int,int>.__infer_tuple_field_0 <- n9 @[220:0]
      n12 = load n3 @[221:0]
      n11 = load &var2 @[221:0]
      store n12.__infer_tuple_class<int,int>.__infer_tuple_field_1 <- n11 @[221:0]
      _ = $sIeg_SgWOe(n5, n7) @[223:0]
      jmp $sIeg_SgWOe::void::ret @[224:0]
      
} @?

define .plain_name = "init" .method_offset = "20" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleCACycfC(var1: *ptr_elt) : *ptr_elt {
  #: @[231:0]
      n1 = load &var1 @[231:0]
      n4 = __sil_swift_alloc(<T5Hello18RetainCycleExampleC>) @[231:0]
      jmp 2::ret @[232:0]
      
  #2::ret: @[234:0]
      n6 = $s5Hello18RetainCycleExampleCACycfc(n4) @[234:0]
      jmp 3::ret @[235:0]
      
  #3::ret: @[236:0]
      ret n6 @[236:0]
      
} @?

define .plain_name = "init" $s5Hello18RetainCycleExampleCACycfc(var1: *ptr_elt) : *ptr_elt {
  local self: *ptr_elt
  #: @[238:0]
      n1 = load &var1 @[238:0]
      store &self <- n1 @[238:0]
      n2 = load &var1 @[2:14]
      n3 = load n2.T5Hello18RetainCycleExampleC.field_1 @[2:14]
      store n3.TSi.field_0 <- 10 @[2:14]
      n5 = load &var1 @[4:9]
      n4 = n5.T5Hello18RetainCycleExampleC.field_2 @[4:9]
      n6 = load n4 @[239:0]
      store n6.__infer_tuple_class<int,int>.__infer_tuple_field_0 <- 0 @[239:0]
      n7 = load n4 @[240:0]
      store n7.__infer_tuple_class<int,int>.__infer_tuple_field_1 <- 0 @[240:0]
      n8 = load &var1 @[241:0]
      ret n8 @[241:0]
      
} @?

declare $s5Hello18RetainCycleExampleCMa(int) : *ptr_elt

declare $s5Hello18RetainCycleExampleCSgWOh(*ptr_elt) : *ptr_elt

declare .plain_name = "deinit" .method_offset = "-2" T5Hello18RetainCycleExampleC.$s5Hello18RetainCycleExampleCfD(*ptr_elt) : *ptr_elt

declare .plain_name = "deinit" $s5Hello18RetainCycleExampleCfd(*ptr_elt) : *ptr_elt

declare $sIeg_SgWOe(int, int) : *ptr_elt

declare $sIeg_SgWOh(*ptr_elt) : *ptr_elt

declare $sIeg_SgWOy(int, int) : *ptr_elt

declare _swift_FORCE_LOAD_$_swiftCompatibility56() : *ptr_elt

declare objc_opt_self(*ptr_elt) : *ptr_elt

declare objectdestroy(*ptr_elt) : *ptr_elt

declare swift_allocObject(*ptr_elt, int, int) : *ptr_elt

declare swift_beginAccess(*ptr_elt, *ptr_elt, int, *ptr_elt) : *ptr_elt

declare swift_deallocClassInstance(*ptr_elt, int, int) : *ptr_elt

declare swift_deallocObject(*ptr_elt, int, int) : *ptr_elt

declare swift_endAccess(*ptr_elt) : *ptr_elt

declare swift_release(*ptr_elt) : *ptr_elt

declare swift_retain(*ptr_elt) : *ptr_elt

declare swift_weakDestroy(*ptr_elt) : *ptr_elt

declare swift_weakInit(*ptr_elt, *ptr_elt) : *ptr_elt

declare swift_weakLoadStrong(*ptr_elt) : *ptr_elt

global symbolic yycSg: *ptr_elt

global symbolic _____SgXw 5Hello18RetainCycleExampleC: *ptr_elt

global symbolic _____ 5Hello18RetainCycleExampleC: *ptr_elt

global symbolic Si: *ptr_elt

global objc_classes_$s5Hello18RetainCycleExampleCN: *ptr_elt

global metadata: *ptr_elt

global llvm::used: *ptr_elt

global llvm::compiler::used: *ptr_elt

global _swift_FORCE_LOAD_$_swiftCompatibility56_$_Hello: *ptr_elt

global _objc_empty_cache: *ptr_elt

global __swift_reflection_version: *ptr_elt

global _METACLASS_DATA__TtC5Hello18RetainCycleExample: *ptr_elt

global _IVARS__TtC5Hello18RetainCycleExample: *ptr_elt

global _DATA__TtC5Hello18RetainCycleExample: *ptr_elt

global OBJC_METACLASS_$__TtCs12_SwiftObject: *ptr_elt

global OBJC_CLASS_$__TtCs12_SwiftObject: *ptr_elt

global ::str::7::closure: *ptr_elt

global ::str::5::Hello: *ptr_elt

global ::str::30::_TtC5Hello18RetainCycleExample: *ptr_elt

global ::str::2::id: *ptr_elt

global ::str::18::RetainCycleExample: *ptr_elt

global ::str::0::: *ptr_elt

global 1: *ptr_elt

global 0: *ptr_elt

global $sBoWV: *ptr_elt

global $s5HelloMXM: *ptr_elt

global $s5Hello18RetainCycleExampleCMn: *ptr_elt

global $s5Hello18RetainCycleExampleCMm: *ptr_elt

global $s5Hello18RetainCycleExampleCMf: *ptr_elt

global $s5Hello18RetainCycleExampleCMF: *ptr_elt

global $s5Hello18RetainCycleExampleCHn: *ptr_elt

global $s5Hello18RetainCycleExampleC7closureyycSgvpWvd: *ptr_elt

global $s5Hello18RetainCycleExampleC2idSivpWvd: *ptr_elt

global l__swift5_reflection_descriptor: *ptr_elt

type $s5Hello18RetainCycleExampleC2idSivM::Frame = {field_0: int[]}

type $s5Hello18RetainCycleExampleC7closureyycSgvM::Frame = {field_0: int[]}

type T5Hello18RetainCycleExampleC = {field_0: *swift::refcounted;
                                     field_1: *TSi; field_2: *TIeg_Sg}

type T5Hello18RetainCycleExampleCSg = {field_0: int}

type TIeg_Sg = {field_0: int[]}

type TSi = {field_0: int}

type __infer_tuple_class<*ptr_elt,*ptr_elt> = {__infer_tuple_field_0: *ptr_elt;
                                               __infer_tuple_field_1: *ptr_elt}

type __infer_tuple_class<*ptr_elt,*ptr_elt,*ptr_elt,int,*ptr_elt,*ptr_elt,*ptr_elt,int,int,int,int,int,int,int,int,*ptr_elt,*ptr_elt,int,int,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt> = {
__infer_tuple_field_0: *ptr_elt; __infer_tuple_field_1: *ptr_elt;
__infer_tuple_field_2: *ptr_elt; __infer_tuple_field_3: int;
__infer_tuple_field_4: *ptr_elt; __infer_tuple_field_5: *ptr_elt;
__infer_tuple_field_6: *ptr_elt; __infer_tuple_field_7: int;
__infer_tuple_field_8: int; __infer_tuple_field_9: int;
__infer_tuple_field_10: int; __infer_tuple_field_11: int;
__infer_tuple_field_12: int; __infer_tuple_field_13: int;
__infer_tuple_field_14: int; __infer_tuple_field_15: *ptr_elt;
__infer_tuple_field_16: *ptr_elt; __infer_tuple_field_17: int;
__infer_tuple_field_18: int; __infer_tuple_field_19: *ptr_elt;
__infer_tuple_field_20: *ptr_elt; __infer_tuple_field_21: *ptr_elt;
__infer_tuple_field_22: *ptr_elt; __infer_tuple_field_23: *ptr_elt;
__infer_tuple_field_24: *ptr_elt; __infer_tuple_field_25: *ptr_elt;
__infer_tuple_field_26: *ptr_elt; __infer_tuple_field_27: *ptr_elt}

type __infer_tuple_class<*ptr_elt,*ptr_elt,*ptr_elt,int,int> = {__infer_tuple_field_0: *ptr_elt;
                                                                __infer_tuple_field_1: *ptr_elt;
                                                                __infer_tuple_field_2: *ptr_elt;
                                                                __infer_tuple_field_3: int;
                                                                __infer_tuple_field_4: int}

type __infer_tuple_class<*swift::refcounted,*swift::weak> = {__infer_tuple_field_0: *swift::refcounted;
                                                             __infer_tuple_field_1: .weak *ptr_elt}

type __infer_tuple_class<int,int> = {__infer_tuple_field_0: int;
                                     __infer_tuple_field_1: int}

type __infer_tuple_class<int,int,(*__infer_tuple_class<*ptr_elt,*ptr_elt,*ptr_elt,int,int>)[]> = {
__infer_tuple_field_0: int; __infer_tuple_field_1: int;
__infer_tuple_field_2: (*__infer_tuple_class<*ptr_elt,*ptr_elt,*ptr_elt,int,int>)[]}

type __infer_tuple_class<int,int,int> = {__infer_tuple_field_0: int;
                                         __infer_tuple_field_1: int;
                                         __infer_tuple_field_2: int}

type __infer_tuple_class<int,int,int,int> = {__infer_tuple_field_0: int;
                                             __infer_tuple_field_1: int;
                                             __infer_tuple_field_2: int;
                                             __infer_tuple_field_3: int}

type __infer_tuple_class<int,int,int,int,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt,*ptr_elt> = {
__infer_tuple_field_0: int; __infer_tuple_field_1: int;
__infer_tuple_field_2: int; __infer_tuple_field_3: int;
__infer_tuple_field_4: *ptr_elt; __infer_tuple_field_5: *ptr_elt;
__infer_tuple_field_6: *ptr_elt; __infer_tuple_field_7: *ptr_elt;
__infer_tuple_field_8: *ptr_elt; __infer_tuple_field_9: *ptr_elt;
__infer_tuple_field_10: *ptr_elt}

type __infer_tuple_class<int,int,int,int,int,int,int,int,int,int,int> = {
__infer_tuple_field_0: int; __infer_tuple_field_1: int;
__infer_tuple_field_2: int; __infer_tuple_field_3: int;
__infer_tuple_field_4: int; __infer_tuple_field_5: int;
__infer_tuple_field_6: int; __infer_tuple_field_7: int;
__infer_tuple_field_8: int; __infer_tuple_field_9: int;
__infer_tuple_field_10: int}

type __infer_tuple_class<int,int,int,int,int,int,int,int,int,int,int,int,int,*swift::method_descriptor,*swift::method_descriptor,*swift::method_descriptor,*swift::method_descriptor,*swift::method_descriptor,*swift::method_descriptor,*swift::method_descriptor,*swift::method_descriptor,*swift::method_descriptor> = {
__infer_tuple_field_0: int; __infer_tuple_field_1: int;
__infer_tuple_field_2: int; __infer_tuple_field_3: int;
__infer_tuple_field_4: int; __infer_tuple_field_5: int;
__infer_tuple_field_6: int; __infer_tuple_field_7: int;
__infer_tuple_field_8: int; __infer_tuple_field_9: int;
__infer_tuple_field_10: int; __infer_tuple_field_11: int;
__infer_tuple_field_12: int;
__infer_tuple_field_13: *swift::method_descriptor;
__infer_tuple_field_14: *swift::method_descriptor;
__infer_tuple_field_15: *swift::method_descriptor;
__infer_tuple_field_16: *swift::method_descriptor;
__infer_tuple_field_17: *swift::method_descriptor;
__infer_tuple_field_18: *swift::method_descriptor;
__infer_tuple_field_19: *swift::method_descriptor;
__infer_tuple_field_20: *swift::method_descriptor;
__infer_tuple_field_21: *swift::method_descriptor}

type __infer_tuple_class<int,int,int[],int> = {__infer_tuple_field_0: int;
                                               __infer_tuple_field_1: int;
                                               __infer_tuple_field_2: int[];
                                               __infer_tuple_field_3: int}

type __infer_tuple_class<int[],int> = {__infer_tuple_field_0: int[];
                                       __infer_tuple_field_1: int}

type objc_class = {field_0: *ptr_elt; field_1: *ptr_elt; field_2: *ptr_elt;
                   field_3: *ptr_elt; field_4: int}

type swift::full_boxmetadata = {field_0: *ptr_elt; field_1: *ptr_elt;
                                field_2: *swift::type; field_3: int;
                                field_4: *ptr_elt}

type swift::function = {field_0: *ptr_elt; field_1: *ptr_elt}

type swift::metadata_response = {field_0: *ptr_elt; field_1: int}

type swift::method_descriptor = {field_0: int; field_1: int}

type swift::refcounted = {field_0: *ptr_elt; field_1: int}

type swift::type = {field_0: int}

type swift::type_metadata_record = {field_0: int}

type swift::weak = {field_0: *ptr_elt}

